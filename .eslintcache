[{"C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\App.js":"1","C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\components\\modal\\Modal.js":"2","C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\store\\reducers\\seasons.js":"3","C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\store\\store.js":"4","C:\\GitHub\\breaking-bad\\src\\index.js":"5","C:\\GitHub\\breaking-bad\\src\\store\\store.js":"6","C:\\GitHub\\breaking-bad\\src\\components\\loading\\Loading.js":"7","C:\\GitHub\\breaking-bad\\src\\axios\\axios.js":"8","C:\\GitHub\\breaking-bad\\src\\store\\actions\\seasons.js":"9","C:\\GitHub\\breaking-bad\\src\\store\\reducers\\root-reducer.js":"10","C:\\GitHub\\breaking-bad\\src\\components\\header\\Header.js":"11","C:\\GitHub\\breaking-bad\\src\\store\\reducers\\seasons.js":"12","C:\\GitHub\\breaking-bad\\src\\components\\card\\Card.js":"13","C:\\GitHub\\breaking-bad\\src\\components\\modal\\Modal.js":"14","C:\\GitHub\\breaking-bad\\src\\store\\actions\\action-types.js":"15","C:\\GitHub\\breaking-bad\\src\\App.js":"16"},{"size":3512,"mtime":1608300896000,"results":"17","hashOfConfig":"18"},{"size":1257,"mtime":1608213786000,"results":"19","hashOfConfig":"18"},{"size":733,"mtime":1608295338000,"results":"20","hashOfConfig":"18"},{"size":538,"mtime":1608201442000,"results":"21","hashOfConfig":"18"},{"size":347,"mtime":1608202432000,"results":"22","hashOfConfig":"23"},{"size":538,"mtime":1608201442000,"results":"24","hashOfConfig":"23"},{"size":260,"mtime":1608213448000,"results":"25","hashOfConfig":"23"},{"size":128,"mtime":1608202868000,"results":"26","hashOfConfig":"23"},{"size":2844,"mtime":1608300842000,"results":"27","hashOfConfig":"23"},{"size":185,"mtime":1608202078000,"results":"28","hashOfConfig":"23"},{"size":216,"mtime":1608204900000,"results":"29","hashOfConfig":"23"},{"size":733,"mtime":1608295338000,"results":"30","hashOfConfig":"23"},{"size":371,"mtime":1608213030000,"results":"31","hashOfConfig":"23"},{"size":1257,"mtime":1608213786000,"results":"32","hashOfConfig":"23"},{"size":249,"mtime":1608212856000,"results":"33","hashOfConfig":"23"},{"size":3512,"mtime":1608300896000,"results":"34","hashOfConfig":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wkngal",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1eixw9n",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\App.js",["70","71"],"C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\components\\modal\\Modal.js",[],"C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\store\\reducers\\seasons.js",[],"C:\\Users\\Mi\\Desktop\\breaking-bad\\src\\store\\store.js",[],"C:\\GitHub\\breaking-bad\\src\\index.js",[],["72","73"],"C:\\GitHub\\breaking-bad\\src\\store\\store.js",[],"C:\\GitHub\\breaking-bad\\src\\components\\loading\\Loading.js",[],"C:\\GitHub\\breaking-bad\\src\\axios\\axios.js",[],"C:\\GitHub\\breaking-bad\\src\\store\\actions\\seasons.js",["74"],"import axios from '../../axios/axios';\nimport {\n  GET_CHARACTER_IMG_START,\n  GET_CHARACTER_IMG_SUCCESS,\n  GET_SEASONS_SUCCESS,\n  GET_SEASONS_START,\n} from './action-types';\n\nexport function getSeasons(episode, isLoading) {\n  return async (dispatch, getState) => {\n    if (isLoading) {\n      dispatch(getSeasonsStart());\n    }\n\n    try {\n      const response = await axios.get(`/episodes/${episode}`);\n      const data = response.data;\n      const currentSeason = `Season_${data[0]?.season}`;\n      const currentState = [...getState().seasons.seasons];\n\n      if (episode < 63) {\n        if (!currentState.find((item) => item.season.trim() === data[0]?.season.trim())) {\n          currentState.push({\n            season: data[0].season,\n            list: [\n              {\n                characters: data[0]?.characters,\n                title: data[0]?.title,\n                episode: data[0]?.episode,\n              }\n            ]\n          })\n        } else {\n          const index = currentState.findIndex((item) => item.season.trim() === data[0].season.trim());\n          currentState[index].list.push({\n            characters: data[0]?.characters,\n            title: data[0]?.title,\n            episode: data[0]?.episode,\n          })\n        }\n      } else {\n        if (!currentState.find((item) => item.season === +data[0]?.season.trim() + 5)) {\n          currentState.push({\n            season: +data[0].season + 5,\n            list: [\n              {\n                characters: data[0]?.characters,\n                title: data[0]?.title,\n                episode: data[0]?.episode,\n              }\n            ]\n          })\n        } else {\n          const index = currentState.findIndex((item) => item.season === +data[0].season.trim() + 5);\n          currentState[index].list.push({\n            characters: data[0]?.characters,\n            title: data[0]?.title,\n            episode: data[0]?.episode,\n          })\n        }\n      }\n\n      currentState.forEach((item) => item.list.sort((a, b) => a.episode - b.episode));\n      dispatch(getSeasonsSuccess(currentState));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport function getSeasonsStart() {\n  return {\n    type: GET_SEASONS_START,\n  }\n}\n\nexport function getSeasonsSuccess(seasons) {\n  return {\n    type: GET_SEASONS_SUCCESS,\n    seasons,\n  }\n}\n\nexport function getCharacterImg(character) {\n  return async (dispatch) => {\n    dispatch(getCharacterImgStart());\n\n    try {\n      const response = await axios.get(`/characters?name=${character}`);\n\n      dispatch(getCharacterImgSuccess(response.data[0].img));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport function getCharacterImgStart() {\n  return {\n    type: GET_CHARACTER_IMG_START,\n  }\n}\n\nexport function getCharacterImgSuccess(src) {\n  return {\n    type: GET_CHARACTER_IMG_SUCCESS,\n    src,\n  }\n}\n","C:\\GitHub\\breaking-bad\\src\\store\\reducers\\root-reducer.js",[],"C:\\GitHub\\breaking-bad\\src\\components\\header\\Header.js",[],"C:\\GitHub\\breaking-bad\\src\\store\\reducers\\seasons.js",[],"C:\\GitHub\\breaking-bad\\src\\components\\card\\Card.js",[],"C:\\GitHub\\breaking-bad\\src\\components\\modal\\Modal.js",[],"C:\\GitHub\\breaking-bad\\src\\store\\actions\\action-types.js",[],"C:\\GitHub\\breaking-bad\\src\\App.js",["75","76"],"import React, { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport { getCharacterImg, getSeasons } from './store/actions/seasons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from './components/card/Card';\nimport Header from './components/header/Header';\nimport Modal from './components/modal/Modal';\nimport Loading from './components/loading/Loading';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const seasons = useSelector(state => state.seasons.seasons);\n  const src = useSelector(state => state.seasons.characterImgSrc);\n  const loading = useSelector(state => state.seasons.seasonsLoading);\n  const [page, setPage] = useState(1);\n  const [isModal, setIsModal] = useState(false);\n  const seasonsArr = [7, 13, 13, 13, 16, 10, 10, 10, 10];\n\n  useEffect(() => {\n    window.addEventListener('scroll', infiniteScroll);\n\n    return () => {\n      window.removeEventListener('scroll', infiniteScroll);\n    }\n  }, []);\n\n  // let i = page === 1 ? 0 : seasonsArr.reduce((prev, current, i) => i !== page ? prev + current : prev);\n\n  useEffect(() => {\n    let currentEpisodes = 0;\n\n    seasonsArr.forEach((item, i) => {\n      if (page - 1 === i || page - 1 < i) return;\n\n      currentEpisodes += item;\n    });\n\n    for (let i = currentEpisodes; i < seasonsArr[page - 1] + currentEpisodes; i++) {\n      dispatch(getSeasons(i + 1));\n    }\n  }, [page]);\n\n  const modalHandler = (character) => {\n    setIsModal(true);\n\n    if (character.split('').find((item) => item === '-')) {\n      dispatch(getCharacterImg(character.split('-').join('+'), page === 1));\n    } else {\n      dispatch(getCharacterImg(character.split(' ').join('+'), page === 1));\n    }\n  };\n\n  const infiniteScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop\n      === document.documentElement.offsetHeight) {\n      setPage((prevState) => {\n        if (prevState + 1 <= seasonsArr.length) return prevState += 1\n      });\n    }\n  };\n\n  const renderCards = () => seasons.length > 0 && seasons.map((item) => (\n    <React.Fragment key={`${Math.random()}--main-cards`}>\n      <div className=\"cards__season\">\n        Сезон {item.season}\n      </div>\n      <div className=\"cards\">\n        {item.list.map((listItem, i) => (\n          <Card index={i + 1} title={listItem.title} key={`${Math.random()}--main-card`}>\n            {listItem.characters.map((character, index) => index + 1 !== listItem.characters.length ? (\n              <div\n                onClick={() => modalHandler(character)}\n                className=\"card__character\"\n                key={`${Math.random()}--main-card-character`}\n              >\n                {character}\n                ,\n              </div>\n            ) : (\n              <div\n                onClick={() => modalHandler(character)}\n                className=\"card__character\"\n                key={`${Math.random()}--main-card-character`}\n              >\n                {character}\n              </div>\n            ))}\n          </Card>\n        ))}\n      </div>\n    </React.Fragment>\n  ));\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"main\">\n        <div className=\"main-wrapper\">\n          {loading ? (\n            <div className=\"cards__loading\">\n              <Loading black />\n            </div>\n          ) : renderCards()}\n        </div>\n      </main>\n\n      <Modal\n        isModal={isModal}\n        src={src}\n        onClose={() => setIsModal(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"77","severity":1,"message":"78","line":27,"column":6,"nodeType":"79","endLine":27,"endColumn":8,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":43,"column":6,"nodeType":"79","endLine":43,"endColumn":12,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":13,"nodeType":"89","messageId":"90","endLine":18,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":27,"column":6,"nodeType":"79","endLine":27,"endColumn":8,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"81","line":43,"column":6,"nodeType":"79","endLine":43,"endColumn":12,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'infiniteScroll'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'dispatch' and 'seasonsArr'. Either include them or remove the dependency array.",["94"],"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'currentSeason' is assigned a value but never used.","Identifier","unusedVar",["97"],["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"103"},{"desc":"101","fix":"104"},"Update the dependencies array to be: [infiniteScroll]",{"range":"105","text":"106"},"Update the dependencies array to be: [dispatch, page, seasonsArr]",{"range":"107","text":"108"},{"range":"109","text":"106"},{"range":"110","text":"108"},[959,961],"[infiniteScroll]",[1383,1389],"[dispatch, page, seasonsArr]",[959,961],[1383,1389]]